# Generated by Django 3.1.2 on 2020-10-08 19:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import provider.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MovieDetails',
            fields=[
                ('movie_id', models.AutoField(primary_key=True, serialize=False)),
                ('movie_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('language', models.PositiveSmallIntegerField(choices=[(1, 'english'), (2, 'hindi'), (3, 'bengali'), (4, 'kannada'), (5, 'malayalam'), (6, 'marathi'), (7, 'tamil'), (8, 'telugu')])),
                ('date_of_creation', models.DateTimeField()),
                ('thumbnail_image', models.ImageField(upload_to=provider.models.movie_thumbnail_directory_path)),
                ('provider_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Movie Details',
            },
        ),
        migrations.CreateModel(
            name='SeriesDetails',
            fields=[
                ('series_id', models.AutoField(primary_key=True, serialize=False)),
                ('series_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('language', models.PositiveSmallIntegerField(choices=[(1, 'english'), (2, 'hindi'), (3, 'bengali'), (4, 'kannada'), (5, 'malayalam'), (6, 'marathi'), (7, 'tamil'), (8, 'telugu')])),
                ('category', models.PositiveSmallIntegerField(choices=[(1, 'sports'), (2, 'entertainment')])),
                ('date_of_creation', models.DateTimeField()),
                ('thumbnail_image', models.ImageField(upload_to=provider.models.series_thumbnail_directory_path)),
                ('provider_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Series Details',
            },
        ),
        migrations.CreateModel(
            name='SeriesSeasonDetails',
            fields=[
                ('series_season_id', models.AutoField(primary_key=True, serialize=False)),
                ('season_no', models.PositiveSmallIntegerField()),
                ('description', models.TextField()),
                ('date_of_creation', models.DateTimeField()),
                ('thumbnail_image', models.ImageField(upload_to=provider.models.series_season_thumbnail_directory_path)),
                ('verification_status', models.PositiveSmallIntegerField(choices=[(1, 'pending'), (2, 'verified'), (3, 'rejected'), (4, 'not submitted')])),
                ('series_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.seriesdetails')),
            ],
            options={
                'verbose_name_plural': 'Series Season Details',
            },
        ),
        migrations.CreateModel(
            name='Videos',
            fields=[
                ('video_id', models.AutoField(primary_key=True, serialize=False)),
                ('video_type', models.PositiveSmallIntegerField(choices=[(1, 'free'), (2, 'series'), (3, 'movie')])),
            ],
            options={
                'verbose_name_plural': 'Videos',
            },
        ),
        migrations.CreateModel(
            name='SeriesVideosTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_no', models.PositiveSmallIntegerField()),
                ('tag_word', models.CharField(max_length=50)),
                ('video_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.videos')),
            ],
            options={
                'verbose_name_plural': 'Series Videos Tags',
            },
        ),
        migrations.CreateModel(
            name='SeriesVideos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_name', models.CharField(max_length=100)),
                ('firebase_save_name', models.CharField(max_length=50)),
                ('firebase_token', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('thumbnail_image', models.ImageField(upload_to=provider.models.video_thumbnail_directory_path)),
                ('date_of_upload', models.DateTimeField()),
                ('date_of_release', models.DateTimeField()),
                ('episode_no', models.PositiveSmallIntegerField()),
                ('duration_of_video', models.IntegerField()),
                ('quality_of_video', models.PositiveSmallIntegerField(choices=[(1, '144'), (2, '240'), (3, '360'), (4, '480'), (5, '720'), (6, '1080')])),
                ('verification_status', models.PositiveSmallIntegerField(choices=[(1, 'pending'), (2, 'verified'), (3, 'rejected'), (4, 'not submitted')])),
                ('cost_of_video', models.PositiveSmallIntegerField()),
                ('series_season_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.seriesseasondetails')),
                ('video_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.videos')),
            ],
            options={
                'verbose_name_plural': 'Series Videos',
            },
        ),
        migrations.CreateModel(
            name='SeriesSubCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category', models.PositiveSmallIntegerField(choices=[(1, 'cricket'), (2, 'football'), (3, 'tennis'), (4, 'martial arts'), (5, 'esports'), (6, 'hockey'), (7, 'badminton'), (8, 'wrestling'), (9, 'kabaddi'), (10, 'table tennis'), (11, 'action'), (12, 'adventure'), (13, 'animation'), (14, 'comedy'), (15, 'crime'), (16, 'drama'), (17, 'horror'), (18, 'romance'), (19, 'thriller')])),
                ('series_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.seriesdetails')),
            ],
            options={
                'verbose_name_plural': 'Series Sub Categories',
            },
        ),
        migrations.CreateModel(
            name='MovieVideoTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_word', models.CharField(max_length=50)),
                ('video_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.videos')),
            ],
            options={
                'verbose_name_plural': 'Movie Video Tags',
            },
        ),
        migrations.CreateModel(
            name='MovieVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('firebase_save_name', models.CharField(max_length=50)),
                ('firebase_token', models.CharField(max_length=50)),
                ('thumbnail_image', models.ImageField(upload_to=provider.models.video_thumbnail_directory_path)),
                ('date_of_upload', models.DateTimeField()),
                ('date_of_release', models.DateTimeField()),
                ('duration_of_video', models.IntegerField()),
                ('quality_of_video', models.PositiveSmallIntegerField(choices=[(1, '144'), (2, '240'), (3, '360'), (4, '480'), (5, '720'), (6, '1080')])),
                ('verification_status', models.PositiveSmallIntegerField(choices=[(1, 'pending'), (2, 'verified'), (3, 'rejected'), (4, 'not submitted')])),
                ('cost_of_video', models.PositiveSmallIntegerField()),
                ('movie_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.moviedetails')),
                ('video_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.videos')),
            ],
            options={
                'verbose_name_plural': 'Movie Video',
            },
        ),
        migrations.CreateModel(
            name='MovieSubCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_category', models.PositiveSmallIntegerField(choices=[(1, 'cricket'), (2, 'football'), (3, 'tennis'), (4, 'martial arts'), (5, 'esports'), (6, 'hockey'), (7, 'badminton'), (8, 'wrestling'), (9, 'kabaddi'), (10, 'table tennis'), (11, 'action'), (12, 'adventure'), (13, 'animation'), (14, 'comedy'), (15, 'crime'), (16, 'drama'), (17, 'horror'), (18, 'romance'), (19, 'thriller')])),
                ('movie_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.moviedetails')),
            ],
            options={
                'verbose_name_plural': 'Movie Sub Categories',
            },
        ),
        migrations.CreateModel(
            name='FreeSeriesVideosTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_word', models.CharField(max_length=50)),
                ('video_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.videos')),
            ],
            options={
                'verbose_name_plural': 'Free Series Videos Tags',
            },
        ),
        migrations.CreateModel(
            name='FreeSeriesVideos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_name', models.CharField(max_length=100)),
                ('firebase_save_name', models.CharField(max_length=50)),
                ('firebase_token', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('thumbnail_image', models.ImageField(upload_to=provider.models.video_thumbnail_directory_path)),
                ('date_of_upload', models.DateTimeField()),
                ('date_of_release', models.DateTimeField()),
                ('duration_of_video', models.IntegerField()),
                ('quality_of_video', models.PositiveSmallIntegerField(choices=[(1, '144'), (2, '240'), (3, '360'), (4, '480'), (5, '720'), (6, '1080')])),
                ('verification_status', models.PositiveSmallIntegerField(choices=[(1, 'pending'), (2, 'verified'), (3, 'rejected'), (4, 'not submitted')])),
                ('series_season_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.seriesseasondetails')),
                ('video_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.videos')),
            ],
            options={
                'verbose_name_plural': 'Free Series Videos',
            },
        ),
        migrations.CreateModel(
            name='FreeMovieVideoTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_word', models.CharField(max_length=50)),
                ('video_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.videos')),
            ],
            options={
                'verbose_name_plural': 'Free Movie Video Tags',
            },
        ),
        migrations.CreateModel(
            name='FreeMovieVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('firebase_save_name', models.CharField(max_length=50)),
                ('firebase_token', models.CharField(max_length=50)),
                ('thumbnail_image', models.ImageField(upload_to=provider.models.video_thumbnail_directory_path)),
                ('date_of_upload', models.DateTimeField()),
                ('date_of_release', models.DateTimeField()),
                ('duration_of_video', models.IntegerField()),
                ('quality_of_video', models.PositiveSmallIntegerField(choices=[(1, '144'), (2, '240'), (3, '360'), (4, '480'), (5, '720'), (6, '1080')])),
                ('verification_status', models.PositiveSmallIntegerField(choices=[(1, 'pending'), (2, 'verified'), (3, 'rejected'), (4, 'not submitted')])),
                ('movie_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.moviedetails')),
                ('video_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider.videos')),
            ],
            options={
                'verbose_name_plural': 'Free Movie Video',
            },
        ),
    ]
